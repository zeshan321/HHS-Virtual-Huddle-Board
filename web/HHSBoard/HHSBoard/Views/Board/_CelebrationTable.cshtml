<script src="~/lib/jquery-effects/confetti/jquery.confetti.js"></script>

<script>
    var $table;

    $(function () {
        $table = $('#table');

        // Set textare as summernote when textarea dynamically added.
        $.initialize("textarea", function () {
            if ($(this).hasClass("form-control") && $(this).hasClass("input-large")) {
                $(this).summernote();
            }
        });

        initTable();

        // Make modal create fields editable
        $("#createDate").editable();
        $("#createWho").editable();
        $("#createWhy").editable();
        $("#createWhat").editable();

        // Reset editables
        $('#reset').click(function () {
            $('.createable').editable('setValue', null)
                .editable('option', 'pk', null)
                .removeClass('editable-unsaved');
        });

        $("#newCelebrationModal").submit(function () {
            var createDate = $("#createDate").editable("getValue")["createDate"];
            var createWho = $("#createWho").editable("getValue")["createWho"];
            var createWhy = $("#createWhy").editable("getValue")["createWhy"];
            var createWhat = $("#createWhat").editable("getValue")["createWhat"];

            if (typeof createDate == 'undefined') {
                $("#createDate").parent().append("<p id='createDateError' style='color: red'>This field is required!</p>")
                return false;
            } else {
                $("#createDateError").remove();
            }

            $.ajax({
                type: "POST",
                url: "/Board/AddCeleration",
                data: { BoardID: @ViewBag.BoardID, Date: createDate, Who: createWho, Why: createWhy, What: createWhat },
                dataType: "json",
                success: function (data) {
                    if (@ViewBag.IsAdmin.ToString().ToLower()) {
                        $.notify({
                            message: 'Successfully created celebration.'
                        }, {
                                type: 'success'
                            });
                    } else {
                        $.notify({
                            message: 'Successfully requested to create new celebration.'
                        }, {
                                type: 'success'
                            });
                    }

                    location.reload();
                },
                error: function (data) {
                    var response = data.responseJSON;

                    $.notify({
                        message: response
                    }, {
                            type: 'danger'
                    });
                }
            });

            return false;
        });

        $("#selectionRemove").click(function () {
            var selections = $("table").bootstrapTable('getSelections');
            var ids = [];
            for (var i = 0; i < selections.length; i++) {
                ids.push(selections[i].id);
            }

            deleteFields(ids);
        });

        $("#confirmDelete").click(function () {
            $.ajax({
            type: "POST",
            url: "/Board/DeleteFields",
            data: {
                BoardID: @ViewBag.BoardID, TableType: 1, Delete: globalDeleteList },
                dataType: "json",
                success: function (data) {
                    if (@ViewBag.IsAdmin.ToString().ToLower()) {
                        $.notify({
                            message: 'Successfully deleted.'
                        }, {
                                type: 'success'
                        });

                        $table.bootstrapTable('remove', {
                            field: 'id',
                            values: globalDeleteList
                        });
                    } else {
                        $.notify({
                            message: 'Successfully requested to delete record.'
                        }, {
                                type: 'success'
                            });

                        GetChangeRequests();
                    }

                    $("#deleteModal").modal("hide");
                },
                error: function (data) {
                    var response = data.responseJSON;

                    $.notify({
                        message: response
                    }, {
                            type: 'danger'
                    });
                }
            });
        });

        // Confetti
        $.confetti.start();

        setTimeout(function () {
            $.confetti.stop();
        }, 2500);
    });

    function initTable() {
        // Triggered when delete is pressed in table row
        window.operateEvents = {
            'click .remove': function (e, value, row, index) {
                deleteFields([row.id]);
            }
        }

        $table.bootstrapTable('destroy').bootstrapTable({
            exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel', 'pdf']
        }).on('all.bs.table', function (e, name, args) {
            // Change to work with single request.
            GetChangeRequests();
        });
    }

    function operateFormatter(value, row, index) {
        return [
            '<a class="remove btn btn-danger" href="javascript:void(0)" title="Remove">',
            '<i class="fa fa-trash"></i>',
            '</a>'
        ].join('')
    }

    var globalDeleteList;
    function deleteFields(list) {
        globalDeleteList = list;

        if (globalDeleteList.length > 0) {
            $("#deleteModal").modal("show");

            $("#deleteModalText").html("Are you sure you want to delete <strong>" + list.length + "</strong> records?");
        } else {
            $.notify({
                message: "No records selected to be deleted."
            }, {
                    type: 'danger'
            });
        }
    }

    function GetChangeRequests() {
        $.ajax({
            type: "POST",
            url: "/Board/GetChangeRequests",
            data: {
                BoardID: @ViewBag.BoardID, TableType: 1 },
                dataType: "json",
            success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        var changeRequestType = data[i].changeRequestType;

                        if (changeRequestType == 0) {
                            var row = $table.bootstrapTable('getRowByUniqueId', item.associatedID);
                            var htmlRow = $("[data-uniqueid=" + item.associatedID + "]").find("[data-name='" + item.associatedName + "']");
                            var parent = htmlRow.parent();
                            parent.css("background-color", "#A9A9A9");

                            var value = JSON.parse(item.values).Value;
                            htmlRow.editable("setValue", value);
                        }

                        if (changeRequestType == 1) {
                            var value = JSON.parse(item.values);
                            var id = value.id;

                            if (!$("tr[data-uniqueid='" + id + "']").length) {
                                $table.bootstrapTable('insertRow', { index: $table.bootstrapTable('getData').length, row: value });
                            }
                            //$table.bootstrapTable('append', value);

                            var parent = $("tr[data-uniqueid='" + id + "']");
                            parent.css("background-color", "#A9A9A9");
                        }
                        
                        if (changeRequestType == 2) {
                            var row = $table.bootstrapTable('getRowByUniqueId', item.associatedID);
                            var htmlRow = $("[data-uniqueid=" + item.associatedID + "]").css("background-color", "#F08080");
                        }
                    }
                },
                error: function (data) {
                   
                }
            });
    }
</script>

<div class="page-header">
    <h1>Celebrations</h1>
</div>

<table id="table"
       data-pagination="true"
       data-show-export="true"
       data-search="true"
       data-mobile-responsive="true"
       data-check-on-init="true"
       data-unique-id="id"
       data-id-field="id"
       data-editable-url="/Board/UpdateField?TableType=1&BoardID=@ViewBag.BoardID"
       data-show-toggle="true"
       data-show-refresh="true"
       data-auto-refresh="true"
       data-show-fullscreen="true"
       data-side-pagination="server"
       data-maintain-selected="true"
       data-url="/Board/GetTableData?TableType=1&BoardID=@ViewBag.BoardID">
    <thead>
        <tr>
            <th data-field="state" data-checkbox="true"></th>
            <th data-field="id" data-visible="false">ID</th>
            <th data-field="date" data-editable="true" data-editable-type="combodate" data-editable-template="D MMM YYYY  HH:mm" data-editable-format="YYYY-MM-DD HH:mm" data-editable-viewformat="MMM D, YYYY, HH:mm" data-sortable="true">Date</th>
            <!-- For html textarea support escape must be false and onblur ignore. -->
            <th data-field="who" data-editable="true" data-editable-type="textarea" data-editable-escape="false" data-editable-onblur="ignore">Who</th>
            <th data-field="what" data-editable="true" data-editable-type="textarea" data-editable-escape="false" data-editable-onblur="ignore">What</th>
            <th data-field="why" data-editable="true" data-editable-type="textarea" data-editable-escape="false" data-editable-onblur="ignore">Why</th>
            <th data-field="operate" data-formatter="operateFormatter" data-events="operateEvents"></th>
        </tr>
    </thead>
</table>

<!-- Modal -->
<div id="newCelebrationModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <form id="createCelebrationForm">

            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add celebration</h4>
                </div>

                <div class="modal-body">
                    <table id="createCelebrationTable" class="table table-bordered table-striped">
                        <tbody>
                            <tr>
                                <td style="width: 1px; white-space: nowrap;">Date *</td>
                                <td><a href="#" class="createable" id="createDate" data-type="combodate" data-name="createDate" data-template="D MMM YYYY  HH:mm" data-format="YYYY-MM-DD HH:mm" data-viewformat="MMM D, YYYY, HH:mm" data-original-title="Select Date of birth" data-onblur="ignore"></a></td>
                            </tr>
                            <tr>
                                <td>Who</td>
                                <td><a href="#" class="createable" id="createWho" data-type="textarea" data-name="createWho" data-original-title="Enter who" data-escape="false" data-onblur="ignore"></a></td>
                            </tr>
                            <tr>
                                <td>What</td>
                                <td><a href="#" class="createable" id="createWhat" data-type="textarea" data-name="createWhat" data-original-title="Enter what" data-escape="false" data-onblur="ignore"></a></td>
                            </tr>
                            <tr>
                                <td>Why</td>
                                <td><a href="#" class="createable" id="createWhy" data-type="textarea" data-name="createWhy" data-original-title="Enter why" data-escape="false" data-onblur="ignore"></a></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button id="reset" type="button" class="btn btn-default">Reset</button>
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="deleteModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Are you sure you want to delete?</h4>
            </div>
            <div class="modal-body">
                <p id="deleteModalText" style="text-align: center;">Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="confirmDelete" type="button" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>


    <div class="fixed-action-btn horizontal" style="bottom: 45px; right: 24px;">
        <a class="btn-floating btn-large red">
            <i class="fa fa-pen"></i>
        </a>
        <ul>
            <li>
                <a id="selectionRemove" class="btn-floating bg-indigo">
                    <i class="fa fa-trash"></i>
                </a>
            </li>
            <li>
                <a class="btn-floating bg-indigo" data-target="#newCelebrationModal" data-toggle="modal">
                    <i class="fa fa-plus"></i>
                </a>
            </li>
        </ul>
    </div>